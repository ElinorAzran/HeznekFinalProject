// <auto-generated />
using Heznek.Common.Enums;
using Heznek.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Heznek.DataAccess.Migrations
{
    [DbContext(typeof(HeznekDbContext))]
    [Migration("20181219120626_AddProfileEntities")]
    partial class AddProfileEntities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Heznek.DataAccess.Entities.AcademicStudiesEntity", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("AcademicDegree");

                    b.Property<string>("AcademicInstitution");

                    b.Property<string>("AprovalFileName");

                    b.Property<string>("FieldOfStudy");

                    b.Property<string>("GradesFileName");

                    b.Property<int?>("GraduationYear");

                    b.Property<int?>("Residence");

                    b.HasKey("Id");

                    b.ToTable("AcademicStudies");
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.CandidateAdditionalDataEntity", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Difficulties");

                    b.Property<string>("FamilyDifficulties");

                    b.Property<string>("FinancialProblems");

                    b.Property<string>("HealthProblems");

                    b.Property<string>("LifeStory");

                    b.Property<string>("ParticipationDescription");

                    b.Property<string>("Reason");

                    b.Property<string>("SituationDetails");

                    b.Property<string>("Status");

                    b.HasKey("Id");

                    b.ToTable("CandidateAdditionalData");
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.ConfirmationEntity", b =>
                {
                    b.Property<string>("Id");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime?>("ConfirmDate");

                    b.Property<bool>("Confirmed");

                    b.HasKey("Id");

                    b.ToTable("Confirmations");
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.ForgotPaswordTokenEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("ExpireTime");

                    b.Property<bool>("Used");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("ForgotPaswordTokens");
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.GeneralEntity", b =>
                {
                    b.Property<int>("Id");

                    b.Property<bool>("Disabilities");

                    b.Property<string>("Ease");

                    b.Property<int>("ParticipationInPrograms")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("Points")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("PsychometricGrade")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<bool>("WorthyOfAdvancment");

                    b.HasKey("Id");

                    b.ToTable("Generals");
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.HighSchoolEntity", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name");

                    b.Property<int?>("Year");

                    b.HasKey("Id");

                    b.ToTable("HighSchools");
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.MilitaryServiceEntity", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Details");

                    b.Property<string>("Role");

                    b.Property<int?>("TypeOfSevice");

                    b.HasKey("Id");

                    b.ToTable("MilitaryServices");
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.ProfileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AcademicParents")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("Address");

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("City");

                    b.Property<int?>("Gender");

                    b.Property<string>("Phone");

                    b.Property<int>("Siblings")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.UserEntity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Created")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<int>("Role");

                    b.Property<string>("Salt")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.AcademicStudiesEntity", b =>
                {
                    b.HasOne("Heznek.DataAccess.Entities.ProfileEntity", "Profile")
                        .WithOne("AcademicStudies")
                        .HasForeignKey("Heznek.DataAccess.Entities.AcademicStudiesEntity", "Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.CandidateAdditionalDataEntity", b =>
                {
                    b.HasOne("Heznek.DataAccess.Entities.ProfileEntity", "Profile")
                        .WithOne("CandidateAdditionalData")
                        .HasForeignKey("Heznek.DataAccess.Entities.CandidateAdditionalDataEntity", "Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.ConfirmationEntity", b =>
                {
                    b.HasOne("Heznek.DataAccess.Entities.UserEntity", "User")
                        .WithOne("Confirmation")
                        .HasForeignKey("Heznek.DataAccess.Entities.ConfirmationEntity", "Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.ForgotPaswordTokenEntity", b =>
                {
                    b.HasOne("Heznek.DataAccess.Entities.UserEntity", "User")
                        .WithMany("ForgotPaswordTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.GeneralEntity", b =>
                {
                    b.HasOne("Heznek.DataAccess.Entities.ProfileEntity", "Profile")
                        .WithOne("General")
                        .HasForeignKey("Heznek.DataAccess.Entities.GeneralEntity", "Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.HighSchoolEntity", b =>
                {
                    b.HasOne("Heznek.DataAccess.Entities.ProfileEntity", "Profile")
                        .WithOne("HighSchool")
                        .HasForeignKey("Heznek.DataAccess.Entities.HighSchoolEntity", "Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.MilitaryServiceEntity", b =>
                {
                    b.HasOne("Heznek.DataAccess.Entities.ProfileEntity", "Profile")
                        .WithOne("MilitaryService")
                        .HasForeignKey("Heznek.DataAccess.Entities.MilitaryServiceEntity", "Id")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Heznek.DataAccess.Entities.ProfileEntity", b =>
                {
                    b.HasOne("Heznek.DataAccess.Entities.UserEntity", "User")
                        .WithOne("Profile")
                        .HasForeignKey("Heznek.DataAccess.Entities.ProfileEntity", "UserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
